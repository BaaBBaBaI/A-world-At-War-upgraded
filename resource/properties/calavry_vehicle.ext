;SDL
{PatherID  "vehicle.large"}
{obstacleID "tank"}
{Simulation {Able 1}}
{props "obstacle_ignore_height"}
;{able "repaired"}
{lodclass "vehicle_small"}


{sensor
	{Visor "main"
		{vision "vehicle_main"}
		{bone "visor"}
	}
	(mod "mp"
		{RecognizeTime 0.5}
		{InformRange 50 50}
	)
}

{boarder}
{placer {crew}}

(define "brain_vehicle"
	{brain "vehicle"
		{state "vehicle"}
		{const "crush/min_danger_zone_time" 	1}
		{const "crush/min_danger_zone_length"	1}
	}
)

{## extender "detail"
	{random}
}



(define "chassis_defaults"
	{FuelBag
		{volume 200 }	; liters
		{rate	20 }   	; liters per kilometer
		{remain 150 }
		{fuel "fuel"}
	}
	{speed
		{Slow	0	}	; km/h
		{Normal	0	}
		{Fast	30	}
	}
)

(define "wheel"
	{volume %0
		{thickness 0.5}
		{tags "wheel"}
		{component %0}
		{able {NoWoundDecal}}
	}
	{component %0
		{RepairTime 10}
		{tags "wheel"}
	}
)

(define "tracks"
	{volume "trackleft"
		{thickness 20}
		{tags "mover" "track"}
		{able {NoWoundDecal}}
	}
	{volume "trackright"
		{thickness 20}
		{tags "mover" "track"}
		{able {NoWoundDecal}}
	}
	{component "trackleft"
		{RepairTime 10}
		{tags "mover" "track"}
	}
	{component "trackright"
		{RepairTime 10}
		{tags "mover" "track"}
	}
)

(define "car_trace"
    {Track %wheell
	    {Tracer
    		{View %fx}
    		{Bone %bonel}
	    	{Step %step}
    	}
    }
    {Track %wheelr
    	{Tracer 
	    	{View %fx}
    		{Bone %boner}
    		{Step %step}
	    }
    }
)

(define "tank_trace_ex"
    {Track "left"
	    {Tracer
    		{View %fx} ; "tracks"
    		{Bone %boneleft}
	    	{Step %step}			; 0.7 meters
    	}
		{TextureScroller
	    	{Bone "TrackL"}
    		{Length %len}		; 0.6 meters per animation
    	}
    }
    {Track "right"
    	{Tracer 
	    	{View %fx}
    		{Bone %boneright}
    		{Step %step}			; in meters
	    }
		{TextureScroller
	    	{Bone "TrackR"}
    		{Length %len}		; meters per animation
    	}
    }
)

(define "tank_trace"
	("tank_trace_ex" fx(%fx) step(%step) len(%len) boneleft("FXtraceL1") boneright("FXtraceR1"))
)

(mod "mp"
	{able "ally_crew"}
)

(mod "coop"
	{able "ally_crew"}
)

(define "shield"
	{armor
		{setting "shield"
			{thickness %0}
			{volumes "*shield*"}
		}
	}
)
